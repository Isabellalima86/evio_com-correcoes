{"version":3,"sources":["imagens/contratacao.jpg","imagens/contratada.jpg","App.js","index.js"],"names":["FormInput","styled","input","Seletor","select","Opcoes","option","Span","span","App","ok","valido","fetchAddress","a","axios","get","form","cep","address","setForm","endereco","data","logradouro","bairro","cidade","localidade","createCandidate","candidate","cpf","alert","rg","nome","nascimento","numero","email","profissao","celular","post","status","window","location","reload","teste","document","getElementById","style","display","useState","cargo","civil","sexo","estado","telefone1","telefone2","contato","veiculo","habilitacao","className","src","fotoCentral","alt","contratada","onChange","e","target","value","type","onBlur","id","onClick","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a19df3dd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/contratacao.7f2c9246.jpg\";","export default __webpack_public_path__ + \"static/media/contratada.b7d0577b.jpg\";","import{ useState, useEffect} from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport './app.css';\nimport fotoCentral from './imagens/contratacao.jpg';\nimport contratada from './imagens/contratada.jpg'; \n\nconst FormInput = styled.input`\nborder: 1,5px solid;\nborder-color: darkblue;\nbackground-color: rgb(222, 235, 247);\nwidth: 100%;\nborder-radius: 5px;\nheight: 20px;\npadding: 3px;\n`;\n\nconst Seletor = styled.select`\nborder: 2px solid;\nborder-color: darkblue;\nbackground-color: rgb(222, 235, 247);\nwidth: 100%;\nborder-radius: 5px;\nheight: 29px;\n`;\n\nconst Opcoes = styled.option `\nbackground-color: rgb(222, 235, 247);\n`;\n\nconst Span = styled.span`\nbackground-color: red;\nborder: 1px solid black;\ncolor: white;\nwidth: 15vw;\ndisplay: none;\n`;\n\nconst App = () => {\n  var ok = true;\n  var valido = true;\n  const fetchAddress = async () => {\n   \n    const address = await axios.get(`https://viacep.com.br/ws/${form.cep}/json/`);\n    setForm({ ...form, endereco: address.data.logradouro , bairro: address.data.bairro , cidade: address.data.localidade   });\n  };\n\n     const createCandidate = async (candidate) => {\n      \n      if (form.cpf === ''){\n        alert('Campos requeridos não podem ficar em branco!');\n        ok = false;\n      }\n      if (form.rg === ''){\n        alert('Campos requeridos não podem ficar em branco!');\n        ok = false;\n      }\n      else if (form.nome === ''){\n       alert('Campos requeridos não podem ficar em branco!');\n       ok = false;\n     }\n     else if (form.nascimento === ''){\n       alert('Campos requeridos não podem ficar em branco!');\n       ok = false;\n     }\n     else if (form.cep === ''){\n       alert('Campos requeridos não podem ficar em branco!');\n       ok = false;\n     }\n     else if (form.endereco === ''){\n       alert('Campos requeridos não podem ficar em branco!');\n       ok = false;\n     }\n     else if (form.numero === ''){\n       alert('Campos requeridos não podem ficar em branco!');\n       ok = false;\n     }\n     else if (form.bairro === ''){\n       alert('Campos requeridos não podem ficar em branco!');\n       ok = false;\n     }\n     else if (form.cidade === ''){\n       alert('Campos requeridos não podem ficar em branco!');\n       ok = false;\n     }\n     else if (form.email === ''){\n       alert('Campos requeridos não podem ficar em branco!');\n       ok = false;\n     }\n     else if (form.profissao === ''){\n       alert('Campos requeridos não podem ficar em branco!');\n       ok = false;\n     }\n     else if (form.celular === ''){\n       alert('Campos requeridos não podem ficar em branco!');\n       ok = false;\n     }\n     else{\n       ok = true;\n     }\n\n   \n      if(ok === true){\n        if(valido === true){ \n        \n        const user = await axios.post('https://banco-de-dados.herokuapp.com/register', form);\n      \n        if (user.status === 200){\n          alert('Cadastro efetuado com sucesso!');\n          window.location.reload();\n      }\n      else{alert('Erro ao gravar, verifique os campos digitados');}\n    }}\n    else{\n      alert('Verifique os campos digitados.');\n    }\n\n    };\n\n    const teste = async () => {\n      \n      const testar = await axios.post('https://banco-de-dados.herokuapp.com/teste', form);\n      if (testar.status === 200){\n        document.getElementById('aviso').style.display = 'block';\n        valido = true;\n        \n      }\n      else{\n        document.getElementById('aviso').style.display = 'none';\n        valido = false;\n      }\n     \n\n    };\n  \n  const [ form, setForm ] = useState({\n    nome: '',\n    cargo: '',\n    nascimento:'',\n    civil:'',\n    sexo: '',\n    endereco: '',\n    numero: '',\n    bairro: '',\n    cidade: '',\n    estado: '',\n    cep: '',\n    telefone1: '',\n    telefone2: '',\n    celular: '',\n    contato: '',\n    email: '',\n    profissao: '',\n    rg: '',\n    cpf: '',\n    veiculo: '',\n    habilitacao: '',\n  });\n\n \n  return (\n    <div className = 'fundo'>\n      <header className = 'topo'> <h1 className='nomeEmpresa'>JobNet</h1>  </header>\n      \n      <div className = 'flex' > \n        <div className = 'iner' > \n          <img className = 'fotoCentral' src = {fotoCentral} alt='contratação'/>\n          <p>Nossos a JobsNET especialista em recrutamento e seleção de profissionais nas mais \n            diversas áreas solicitou para a nossa fábrica de software desenvolver uma página \n            para atração de profissionais para conectar as oportunidades de emprego.</p> \n        </div>\n      </div>\n\n      <div className = 'flex2'> \n        <div className = 'texEmprego'> \n            <h4>Está procurando um novo emprego?</h4>           \n              <p> Conectamos os melhores talentos às melhores oportunidades \n              e desenvolvemos tanto empresas quanto pessoas para que alcancem\n              sua melhor versão, todos os dias. Preencha o formulário abaixo que\n              te ajudaremos a ver qual vaga você dá match!</p>\n\n              \n        </div>\n\n        <div> \n            <img className = 'contratada' src={contratada} alt = 'Contratada'/>\n        </div>\n      </div>\n     \n      \n      \n      <div className = 'cabecalho'> \n        <div> <h3 className='txtcadastro'>Faça o seu cadastro Aqui!</h3> </div>\n  \n        <div className = 'backForm' >\n       \n          <div> <h2>Dados Pessoais </h2> </div>\n          <div className = 'linha'>    \n            <div className='esp'> \n              <div><label> Nome Completo *</label></div>\n              <FormInput onChange= {(e) =>{\n                setForm({ ...form, nome: e.target.value});\n              }} value= {form.nome}/>  \n            </div>\n            \n            <div className='esp'>  \n              <div><label> Cargo Pretendido </label></div>\n              <FormInput onChange= {(e) =>{\n                setForm({ ...form, cargo: e.target.value});\n              }} value= {form.cargo}/>  \n            </div>\n          </div>\n\n          <div className = 'linha'>\n            <div className='esp'>  \n              <div> <label> Data de Nascimento * </label></div>\n              <FormInput type='date' onChange= {(e) =>{\n                setForm({ ...form, nascimento: e.target.value});\n              }} value= {form.nascimento}/>  \n            </div>\n\n            <div className='esp'>  \n             <div> <label> Estado Civil</label> </div>\n              <Seletor onChange= {(e) =>{\n                setForm({ ...form, civil: e.target.value});\n              }} value= {form.civil}>\n                <Opcoes>            </Opcoes>\n                <Opcoes> Casada(o) </Opcoes>\n                <Opcoes> Solteira(o) </Opcoes>\n                <Opcoes> Divorciada(o) </Opcoes>\n                <Opcoes> Viúva(o) </Opcoes>\n                <Opcoes> União Estável </Opcoes>\n                <Opcoes> Prefiro não informar</Opcoes>\n              </Seletor>  \n            </div>\n            \n            <div className='esp'>\n              <div><label> Sexo </label></div>\n              <Seletor onChange= {(e) =>{\n                setForm({ ...form, sexo: e.target.value});\n              }} value= {form.sexo}>\n                <Opcoes>            </Opcoes>\n                <Opcoes> Mulher cis </Opcoes>\n                <Opcoes> Homem cis </Opcoes>\n                <Opcoes> Mulher trans </Opcoes>\n                <Opcoes> Homem trans </Opcoes>\n                <Opcoes> Prefiro não informar </Opcoes>\n              </Seletor>\n            </div>\n          </div>\n\n          <div className = 'linha'>\n            <div className='esp2'>  \n              <div><label> Endereço *</label></div>\n              <FormInput onChange= {(e) =>{\n                setForm({ ...form, endereco: e.target.value});\n              }} value= {form.endereco}/>  \n            </div>\n\n            <div className='esp3'>  \n              <div><label> Numero *</label></div>\n              <FormInput onChange= {(e) =>{\n                setForm({ ...form, numero: e.target.value});\n              }} value= {form.numero}/>  \n            </div>\n\n            <div className='esp'>  \n              <div><label> Bairro *</label></div>\n              <FormInput onChange= {(e) =>{\n                setForm({ ...form, bairro: e.target.value});\n              }} value= {form.bairro}/>  \n            </div>\n          </div>\n\n          <div className = 'linha'>\n            <div className='esp2'>  \n              <div><label> Cidade *</label></div>\n              <FormInput onChange= {(e) =>{\n                setForm({ ...form, cidade: e.target.value});\n              }} value= {form.cidade}/>  \n            </div>\n\n            <div className='esp3'>  \n              <div><label> Estado *</label></div>\n              <FormInput onChange= {(e) =>{\n                setForm({ ...form, estado: e.target.value});\n              }} value= {form.estado}/>  \n            </div>\n\n            <div className='esp'>  \n              <div><label> CEP *</label></div>\n              <FormInput onBlur={() => {\n               fetchAddress();\n              }}  onChange= {(e) =>{\n                setForm({ ...form, cep: e.target.value});\n              }} value= {form.cep}/>  \n            </div>\n          </div>\n          \n          <div className = 'linha'>\n            <div className='esp'>  \n              <div><label> Telefone Fixo 1 </label></div>\n              <FormInput onChange= {(e) =>{\n                setForm({ ...form, telefone1: e.target.value});\n              }} value= {form.telefone1}/>  \n            </div>\n            \n            <div className='esp'>  \n              <div><label> Telefone Fixo 2 </label></div>\n              <FormInput onChange= {(e) =>{\n                setForm({ ...form, telefone2: e.target.value});\n              }} value= {form.telefone2}/>  \n            </div>\n\n            <div className='esp'>  \n              <div><label> Celular </label> </div>\n              <FormInput onChange= {(e) =>{\n                setForm({ ...form, celular: e.target.value});\n              }} value= {form.celular}/>  \n            </div>\n          </div>\n          \n          <div className = 'linha'>\n            <div className='esp'>  \n              <div><label> Contato </label> </div>\n              <FormInput onChange= {(e) =>{\n                setForm({ ...form, contato: e.target.value});\n              }} value= {form.contato}/>  \n            </div>\n\n            <div className='esp'>  \n              <div><label> E-mail</label></div>\n              <FormInput type = 'email' onChange= {(e) =>{\n                setForm({ ...form, email: e.target.value});\n              }} value= {form.email}/>  \n            </div>\n\n            <div className='esp'>  \n              <div><label> Profissão </label> </div>\n              <FormInput onChange= {(e) =>{\n                setForm({ ...form, profissao: e.target.value});\n              }} value= {form.profissao}/>  \n            </div>\n            \n\n          </div>\n          \n          <div className = 'documentos'> <h2>Documentos </h2> </div>\n          <div className = 'linha'>    \n            <div className='esp'>  \n              <div><label> Identidade * </label> </div>\n              <FormInput onChange= {(e) =>{\n                setForm({ ...form, rg: e.target.value});\n              }} value= {form.rg}/>  \n            </div>\n\n            <div className='esp'>  \n              <div> <label> CPF * </label> </div>\n              <FormInput onBlur={() => {\n               teste();\n              }} onChange= {(e) =>{\n                setForm({ ...form, cpf: e.target.value});\n              }} value= {form.cpf}/> \n               <Span id = 'aviso'>Este CPF já está cadastrado!</Span>\n            </div>\n\n            <div className='esp3'>\n              <div><label> Possui Veículo? </label> </div>\n              <Seletor onChange= {(e) =>{\n                setForm({ ...form, veiculo: e.target.value});\n              }} value= {form.veiculo}>\n                <Opcoes>           </Opcoes>\n                <Opcoes> Sim </Opcoes>\n                <Opcoes> Não </Opcoes>\n              </Seletor>\n            </div>\n\n            <div className='esp'>\n              <div><label> Habilitação </label></div>\n              <Seletor onChange= {(e) =>{\n                setForm({ ...form, habilitacao: e.target.value});\n              }} value= {form.habilitacao}>\n                <Opcoes>            </Opcoes>\n                <Opcoes> Não </Opcoes>\n                <Opcoes> A </Opcoes>\n                <Opcoes> B</Opcoes>\n                <Opcoes> C </Opcoes>\n                <Opcoes> D </Opcoes>\n                <Opcoes> E </Opcoes>\n              </Seletor>\n            </div>\n          </div>\n          <div className='divBtn'>\n            <button className = 'botaoEnviar' onClick={()=>createCandidate()}>Enviar cadastro!</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}